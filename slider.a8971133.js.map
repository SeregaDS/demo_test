{"version":3,"sources":["js/slider.js"],"names":["document","addEventListener","ItcSimpleSlider","loop","autoplay","swipe","constructor","target","config","action","_config","clearInterval","_intervalId","setInterval","_direction","_move","bind","interval","_el","querySelector","_elWrapper","SELECTOR_WRAPPER","_elItems","SELECTOR_ITEMS","_elsItem","querySelectorAll","SELECTOR_ITEM","_currentIndex","_minOrder","_maxOrder","_$itemWithMinOrder","_$itemWithMaxOrder","_minTranslate","_maxTranslate","_balancingItemsFlag","_transform","_width","getBoundingClientRect","width","_supportResizeObserver","window","ResizeObserver","_hasSwipeState","_swipeStartPosX","Object","assign","indicators","dataset","translate","forEach","item","index","order","count","length","translateX","style","transform","_addIndicators","_refreshExtremeValues","_setActiveClass","_addEventListener","_autoplay","elActive","SELECTOR_ITEM_ACTIVE","classList","remove","CLASS_NAME_ITEM_ACTIVE","elActiveNew","add","elIndicatorActive","SELECTOR_INDICATOR_ACTIVE","CLASS_NAME_INDICATOR_ACTIVE","elIndicatorNew","elPrevBtn","SELECTOR_CONTROL_PREV","elNextBtn","SELECTOR_CONTROL_NEXT","CLASS_NAME_CONTROL_SHOW","dispatchEvent","CustomEvent","bubbles","useTransition","TRANSITION_NONE","condition","step","_moveTo","currentIndex","i","Math","abs","SELECTOR_INDICATORS","html","CLASS_NAME_INDICATOR","insertAdjacentHTML","CLASS_NAME_INDICATORS","parseInt","$item","_balancingItems","$wrapper","wrapperRect","halfWidthItem","wrapperLeft","left","$min","right","wrapperRight","$max","requestAnimationFrame","$items","onSwipeStart","e","closest","CLASS_NAME_CONTROL","event","type","search","touches","clientX","_swipeStartPosY","clientY","_hasSwiping","onSwipeMove","diffPosX","diffPosY","preventDefault","value","onSwipeEnd","changedTouches","SWIPE_THRESHOLD","onClick","$target","contains","slide","slideTo","onTransitionStart","onTransitionEnd","onMouseEnter","onMouseLeave","supportsPassive","opts","defineProperty","get","err","passive","onDragStart","onVisibilityChange","visibilityState","onResizeObserver","entries","contentBoxSize","newTranslateX","contentRect","newWidth","inlineSize","toFixed","observe","next","prev","moveTo","PREFIX","CLASS_NAME_ITEMS","CLASS_NAME_ITEM","CLASS_NAME_CONTROL_NEXT","CLASS_NAME_CONTROL_PREV"],"mappings":"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","file":"slider.a8971133.js","sourceRoot":"../src","sourcesContent":["/**\n * SimpleAdaptiveSlider by itchief v2.0.1 (https://github.com/itchief/ui-components/tree/master/simple-adaptive-slider)\n * Copyright 2020 - 2022 Alexander Maltsev\n * Licensed under MIT (https://github.com/itchief/ui-components/blob/master/LICENSE)\n */\n document.addEventListener('DOMContentLoaded', function () {\n  // инициализация слайдера\n  var slider = new ItcSimpleSlider('.slider', {\n    loop: true,\n    autoplay: true,\n    swipe: true,\n  });\n});\n\nclass ItcSimpleSlider {\n  // базовые классы и селекторы\n  static PREFIX = 'slider';\n  static CLASS_NAME_ITEM = `${ItcSimpleSlider.PREFIX}__item`;\n  static CLASS_NAME_ITEM_ACTIVE = `${ItcSimpleSlider.PREFIX}__item--active`;\n  static CLASS_NAME_ITEMS = `${ItcSimpleSlider.PREFIX}__items`;\n  static CLASS_NAME_INDICATOR = `${ItcSimpleSlider.PREFIX}__indicator`;\n  static CLASS_NAME_INDICATOR_ACTIVE = `${ItcSimpleSlider.PREFIX}__indicator--active`;\n  static CLASS_NAME_INDICATORS = `${ItcSimpleSlider.PREFIX}__indicators`;\n  static CLASS_NAME_CONTROL = `${ItcSimpleSlider.PREFIX}__control`;\n  static CLASS_NAME_CONTROL_PREV = `${ItcSimpleSlider.PREFIX}__control--prev`;\n  static CLASS_NAME_CONTROL_NEXT = `${ItcSimpleSlider.PREFIX}__control--next`;\n  static CLASS_NAME_CONTROL_SHOW = `${ItcSimpleSlider.PREFIX}__control--show`;\n  static SELECTOR_ITEMS = `.${ItcSimpleSlider.CLASS_NAME_ITEMS}`;\n  static SELECTOR_ITEM = `.${ItcSimpleSlider.CLASS_NAME_ITEM}`;\n  static SELECTOR_ITEM_ACTIVE = `.${ItcSimpleSlider.CLASS_NAME_ITEM_ACTIVE}`;\n  static SELECTOR_INDICATOR_ACTIVE = `.${ItcSimpleSlider.CLASS_NAME_INDICATOR_ACTIVE}`;\n  static SELECTOR_INDICATORS = `.${ItcSimpleSlider.CLASS_NAME_INDICATORS}`;\n  static SELECTOR_WRAPPER = `.${ItcSimpleSlider.PREFIX}__wrapper`;\n  static SELECTOR_CONTROL = `.${ItcSimpleSlider.CLASS_NAME_CONTROL}`;\n  static SELECTOR_CONTROL_NEXT = `.${ItcSimpleSlider.CLASS_NAME_CONTROL_NEXT}`;\n  static SELECTOR_CONTROL_PREV = `.${ItcSimpleSlider.CLASS_NAME_CONTROL_PREV}`;\n  // порог для переключения слайда (20%)\n  static SWIPE_THRESHOLD = 20;\n  // класс для отключения transition\n  static TRANSITION_NONE = 'transition-none';\n\n  constructor(target, config) {\n    this._el = typeof target === 'string' ? document.querySelector(target) : target;\n    this._elWrapper = this._el.querySelector(ItcSimpleSlider.SELECTOR_WRAPPER);\n    this._elItems = this._el.querySelector(ItcSimpleSlider.SELECTOR_ITEMS);\n    this._elsItem = this._el.querySelectorAll(ItcSimpleSlider.SELECTOR_ITEM);\n    // текущий индекс\n    this._currentIndex = 0;\n    // экстремальные значения слайдов\n    this._minOrder = 0;\n    this._maxOrder = 0;\n    this._$itemWithMinOrder = null;\n    this._$itemWithMaxOrder = null;\n    this._minTranslate = 0;\n    this._maxTranslate = 0;\n    // направление смены слайдов (по умолчанию)\n    this._direction = 'next';\n    // флаг, который показывает, что идёт процесс уравновешивания слайдов\n    this._balancingItemsFlag = false;\n    // текущее значение трансформации\n    this._transform = 0;\n\n    this._width = this._elWrapper.getBoundingClientRect().width;\n\n    this._supportResizeObserver = typeof window.ResizeObserver !== 'undefined';\n\n    // swipe параметры\n    this._hasSwipeState = false;\n    this._swipeStartPosX = 0;\n    // id таймера\n    this._intervalId = null;\n    // конфигурация слайдера (по умолчанию)\n    const defaultConfig = {\n      autoplay: false,\n      loop: true,\n      indicators: true,\n      interval: 3000,\n      swipe: true,\n    };\n    this._config = Object.assign(defaultConfig, config);\n    this._elItems.dataset.translate = 0;\n    // добавляем к слайдам data-атрибуты\n    this._elsItem.forEach((item, index) => {\n      item.dataset.order = index;\n      item.dataset.index = index;\n      item.dataset.translate = 0;\n    });\n    // перемещаем последний слайд перед первым\n    if (this._config.loop) {\n      var count = this._elsItem.length - 1;\n      var translate = -this._elsItem.length;\n      this._elsItem[count].dataset.order = -1;\n      this._elsItem[count].dataset.translate = -this._elsItem.length;\n      var translateX = translate * this._width;\n      this._elsItem[count].style.transform = 'translateX(' + translateX + 'px)';\n    }\n    // добавляем индикаторы к слайдеру\n    this._addIndicators();\n    // обновляем экстремальные значения переменных\n    this._refreshExtremeValues();\n    // помечаем активные элементы\n    this._setActiveClass();\n    // назначаем обработчики\n    this._addEventListener();\n    // запускаем автоматическую смену слайдов\n    this._autoplay();\n  }\n\n  _setActiveClass() {\n    const elActive = this._el.querySelector(ItcSimpleSlider.SELECTOR_ITEM_ACTIVE);\n    elActive ? elActive.classList.remove(ItcSimpleSlider.CLASS_NAME_ITEM_ACTIVE) : null;\n    const elActiveNew = this._el.querySelector(`[data-index=\"${this._currentIndex}\"]`);\n    elActiveNew ? elActiveNew.classList.add(ItcSimpleSlider.CLASS_NAME_ITEM_ACTIVE) : null;\n\n    const elIndicatorActive = this._el.querySelector(ItcSimpleSlider.SELECTOR_INDICATOR_ACTIVE);\n    elIndicatorActive\n      ? elIndicatorActive.classList.remove(ItcSimpleSlider.CLASS_NAME_INDICATOR_ACTIVE)\n      : null;\n    const elIndicatorNew = this._el.querySelector(`[data-slide-to=\"${this._currentIndex}\"]`);\n    elIndicatorNew\n      ? elIndicatorNew.classList.add(ItcSimpleSlider.CLASS_NAME_INDICATOR_ACTIVE)\n      : null;\n\n    const elPrevBtn = this._el.querySelector(ItcSimpleSlider.SELECTOR_CONTROL_PREV);\n    const elNextBtn = this._el.querySelector(ItcSimpleSlider.SELECTOR_CONTROL_NEXT);\n    elPrevBtn ? elPrevBtn.classList.add(ItcSimpleSlider.CLASS_NAME_CONTROL_SHOW) : null;\n    elNextBtn ? elNextBtn.classList.add(ItcSimpleSlider.CLASS_NAME_CONTROL_SHOW) : null;\n    if (!this._config.loop && this._currentIndex === 0) {\n      elPrevBtn.classList.remove(ItcSimpleSlider.CLASS_NAME_CONTROL_SHOW);\n    } else if (!this._config.loop && this._currentIndex === this._elsItem.length - 1) {\n      elNextBtn.classList.remove(ItcSimpleSlider.CLASS_NAME_CONTROL_SHOW);\n    }\n\n    this._el.dispatchEvent(\n      new CustomEvent('active.itc.slider', {\n        bubbles: true,\n      })\n    );\n  }\n\n  // смена слайдов\n  _move(useTransition) {\n    var translateX;\n    this._elItems.classList.remove(ItcSimpleSlider.TRANSITION_NONE);\n    if (useTransition === false) {\n      this._elItems.classList.add(ItcSimpleSlider.TRANSITION_NONE);\n    }\n    if (this._direction === 'none') {\n      translateX = this._transform * this._width;\n      this._elItems.style.transform = 'translateX(' + translateX + 'px)';\n      return;\n    }\n    if (!this._config.loop) {\n      var condition = this._currentIndex + 1 >= this._elsItem.length;\n      if (condition && this._direction === 'next') {\n        this._autoplay('stop');\n        return;\n      }\n      if (this._currentIndex <= 0 && this._direction === 'prev') {\n        return;\n      }\n    }\n    var step = this._direction === 'next' ? -1 : 1;\n    var transform = this._transform + step;\n    if (this._direction === 'next') {\n      if (++this._currentIndex > this._elsItem.length - 1) {\n        this._currentIndex -= this._elsItem.length;\n      }\n    } else {\n      if (--this._currentIndex < 0) {\n        this._currentIndex += this._elsItem.length;\n      }\n    }\n    this._transform = transform;\n    this._elItems.dataset.translate = transform;\n    translateX = transform * this._width;\n    this._elItems.style.transform = 'translateX(' + translateX + 'px)';\n    this._elItems.dispatchEvent(\n      new CustomEvent('transition-start', {\n        bubbles: true,\n      })\n    );\n    this._setActiveClass();\n  }\n\n  // функция для перемещения к слайду по индексу\n  _moveTo(index, useTransition) {\n    var currentIndex = this._currentIndex;\n    this._direction = index > currentIndex ? 'next' : 'prev';\n    for (var i = 0; i < Math.abs(index - currentIndex); i++) {\n      this._move(useTransition);\n    }\n  }\n\n  // метод для автоматической смены слайдов\n  _autoplay = function (action) {\n    if (!this._config.autoplay) {\n      return;\n    }\n    if (action === 'stop') {\n      clearInterval(this._intervalId);\n      this._intervalId = null;\n      return;\n    }\n    if (this._intervalId === null) {\n      this._intervalId = setInterval(\n        function () {\n          this._direction = 'next';\n          this._move();\n        }.bind(this),\n        this._config.interval\n      );\n    }\n  };\n\n  // добавление индикаторов\n  _addIndicators() {\n    if (this._el.querySelector(ItcSimpleSlider.SELECTOR_INDICATORS) || !this._config.indicators) {\n      return;\n    }\n    let html = '';\n    for (let i = 0, length = this._elsItem.length; i < length; i++) {\n      html += `<li class=\"${ItcSimpleSlider.CLASS_NAME_INDICATOR}\" data-slide-to=\"${i}\"></li>`;\n    }\n    this._el.insertAdjacentHTML(\n      'beforeend',\n      `<ol class=\"${ItcSimpleSlider.CLASS_NAME_INDICATORS}\">${html}</ol>`\n    );\n  }\n\n  // refresh extreme values\n  _refreshExtremeValues() {\n    this._minOrder = parseInt(this._elsItem[0].dataset.order);\n    this._maxOrder = this._minOrder;\n    this._$itemWithMinOrder = this._elsItem[0];\n    this._$itemWithMaxOrder = this._$itemWithMinOrder;\n    this._minTranslate = parseInt(this._elsItem[0].dataset.translate);\n    this._maxTranslate = this._minTranslate;\n    for (var i = 0, length = this._elsItem.length; i < length; i++) {\n      var $item = this._elsItem[i];\n      var order = parseInt($item.dataset.order);\n      if (order < this._minOrder) {\n        this._minOrder = order;\n        this._$itemWithMinOrder = $item;\n        this._minTranslate = parseInt($item.dataset.translate);\n      } else if (order > this._maxOrder) {\n        this._maxOrder = order;\n        this._$itemWithMaxOrder = $item;\n        this._maxTranslate = parseInt($item.dataset.translate);\n      }\n    }\n  }\n\n  // balancing items\n  _balancingItems() {\n    if (!this._balancingItemsFlag) {\n      return;\n    }\n    var $wrapper = this._elWrapper;\n    var wrapperRect = $wrapper.getBoundingClientRect();\n    var halfWidthItem = wrapperRect.width / 2;\n    var count = this._elsItem.length;\n    var translate;\n    var clientRect;\n    var translateX;\n    if (this._direction === 'next') {\n      var wrapperLeft = wrapperRect.left;\n      var $min = this._$itemWithMinOrder;\n      translate = this._minTranslate;\n      clientRect = $min.getBoundingClientRect();\n      if (clientRect.right < wrapperLeft - halfWidthItem) {\n        $min.dataset.order = this._minOrder + count;\n        translate += count;\n        $min.dataset.translate = translate;\n        translateX = translate * this._width;\n        $min.style.transform = 'translateX(' + translateX + 'px)';\n        this._refreshExtremeValues();\n      }\n    } else if (this._direction === 'prev') {\n      var wrapperRight = wrapperRect.right;\n      var $max = this._$itemWithMaxOrder;\n      translate = this._maxTranslate;\n      clientRect = $max.getBoundingClientRect();\n      if (clientRect.left > wrapperRight + halfWidthItem) {\n        $max.dataset.order = this._maxOrder - count;\n        translate -= count;\n        $max.dataset.translate = translate;\n        translateX = translate * this._width;\n        $max.style.transform = 'translateX(' + translateX + 'px)';\n        this._refreshExtremeValues();\n      }\n    }\n    requestAnimationFrame(this._balancingItems.bind(this));\n  }\n\n  // adding listeners\n  _addEventListener() {\n    var $items = this._elItems;\n\n    function onClick(e) {\n      var $target = e.target;\n      this._autoplay('stop');\n      if ($target.classList.contains(ItcSimpleSlider.CLASS_NAME_CONTROL)) {\n        e.preventDefault();\n        this._direction = $target.dataset.slide;\n        this._move();\n      } else if ($target.dataset.slideTo) {\n        e.preventDefault();\n        var index = parseInt($target.dataset.slideTo);\n        this._moveTo(index);\n      }\n      if (this._config.loop) {\n        this._autoplay();\n      }\n    }\n\n    function onTransitionStart() {\n      if (this._balancingItemsFlag) {\n        return;\n      }\n      this._balancingItemsFlag = true;\n      window.requestAnimationFrame(this._balancingItems.bind(this));\n    }\n\n    function onTransitionEnd() {\n      this._balancingItemsFlag = false;\n      this._el.dispatchEvent(\n        new CustomEvent('transition-end', {\n          bubbles: true,\n        })\n      );\n    }\n\n    function onMouseEnter() {\n      this._autoplay('stop');\n    }\n\n    function onMouseLeave() {\n      if (this._config.loop) {\n        this._autoplay();\n      }\n    }\n\n    function onSwipeStart(e) {\n      this._autoplay('stop');\n      if (e.target.closest(ItcSimpleSlider.CLASS_NAME_CONTROL)) {\n        return;\n      }\n      var event = e.type.search('touch') === 0 ? e.touches[0] : e;\n      this._swipeStartPosX = event.clientX;\n      this._swipeStartPosY = event.clientY;\n      this._hasSwipeState = true;\n      this._hasSwiping = false;\n    }\n\n    function onSwipeMove(e) {\n      if (!this._hasSwipeState) {\n        return;\n      }\n      var event = e.type.search('touch') === 0 ? e.touches[0] : e;\n      var diffPosX = this._swipeStartPosX - event.clientX;\n      var diffPosY = this._swipeStartPosY - event.clientY;\n      if (!this._hasSwiping) {\n        if (Math.abs(diffPosY) > Math.abs(diffPosX) || Math.abs(diffPosX) === 0) {\n          this._hasSwipeState = false;\n          return;\n        }\n        this._hasSwiping = true;\n      }\n      e.preventDefault();\n      if (!this._config.loop) {\n        if (this._currentIndex + 1 >= this._elsItem.length && diffPosX >= 0) {\n          diffPosX = diffPosX / 4;\n        }\n        if (this._currentIndex <= 0 && diffPosX <= 0) {\n          diffPosX = diffPosX / 4;\n        }\n      }\n      var value = diffPosX / this._elWrapper.getBoundingClientRect().width;\n      var translateX = this._transform - value;\n      this._elItems.classList.add(ItcSimpleSlider.TRANSITION_NONE);\n      translateX = translateX * this._width;\n      this._elItems.style.transform = 'translateX(' + translateX + 'px)';\n    }\n\n    function onSwipeEnd(e) {\n      if (!this._hasSwipeState) {\n        return;\n      }\n      var event = e.type.search('touch') === 0 ? e.changedTouches[0] : e;\n      var diffPosX = this._swipeStartPosX - event.clientX;\n      if (diffPosX === 0) {\n        this._hasSwipeState = false;\n        return;\n      }\n      if (!this._config.loop) {\n        if (this._currentIndex + 1 >= this._elsItem.length && diffPosX >= 0) {\n          diffPosX = diffPosX / 7;\n        }\n        if (this._currentIndex <= 0 && diffPosX <= 0) {\n          diffPosX = diffPosX / 7;\n        }\n      }\n      var value = (diffPosX / this._elWrapper.getBoundingClientRect().width) * 100;\n      this._elItems.classList.remove(ItcSimpleSlider.TRANSITION_NONE);\n      if (value > ItcSimpleSlider.SWIPE_THRESHOLD) {\n        this._direction = 'next';\n        this._move();\n      } else if (value < -ItcSimpleSlider.SWIPE_THRESHOLD) {\n        this._direction = 'prev';\n        this._move();\n      } else {\n        this._direction = 'none';\n        this._move();\n      }\n      this._hasSwipeState = false;\n      if (this._config.loop) {\n        this._autoplay();\n      }\n    }\n\n    function onDragStart(e) {\n      e.preventDefault();\n    }\n\n    function onVisibilityChange() {\n      if (document.visibilityState === 'hidden') {\n        this._autoplay('stop');\n      } else if (document.visibilityState === 'visible') {\n        if (this._config.loop) {\n          this._autoplay();\n        }\n      }\n    }\n    // click\n    this._el.addEventListener('click', onClick.bind(this));\n    // transitionstart and transitionend\n    if (this._config.loop) {\n      $items.addEventListener('transition-start', onTransitionStart.bind(this));\n      $items.addEventListener('transitionend', onTransitionEnd.bind(this));\n    }\n    // mouseenter and mouseleave\n    if (this._config.autoplay) {\n      this._el.addEventListener('mouseenter', onMouseEnter.bind(this));\n      this._el.addEventListener('mouseleave', onMouseLeave.bind(this));\n    }\n    // swipe\n    if (this._config.swipe) {\n      var supportsPassive = false;\n      try {\n        var opts = Object.defineProperty({}, 'passive', {\n          get: function () {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (err) {}\n      this._el.addEventListener(\n        'touchstart',\n        onSwipeStart.bind(this),\n        supportsPassive\n          ? {\n              passive: false,\n            }\n          : false\n      );\n      this._el.addEventListener(\n        'touchmove',\n        onSwipeMove.bind(this),\n        supportsPassive\n          ? {\n              passive: false,\n            }\n          : false\n      );\n      this._el.addEventListener('mousedown', onSwipeStart.bind(this));\n      this._el.addEventListener('mousemove', onSwipeMove.bind(this));\n      document.addEventListener('touchend', onSwipeEnd.bind(this));\n      document.addEventListener('mouseup', onSwipeEnd.bind(this));\n      document.addEventListener('mouseout', onSwipeEnd.bind(this));\n    }\n    this._el.addEventListener('dragstart', onDragStart.bind(this));\n    // при изменении активности вкладки\n    document.addEventListener('visibilitychange', onVisibilityChange.bind(this));\n\n    function onResizeObserver(entries) {\n      var contentBoxSize = entries[0].contentBoxSize;\n      var contentRect = entries[0].contentRect;\n      var newWidth = contentRect\n        ? contentRect.width\n        : (contentBoxSize[0] || contentBoxSize).inlineSize;\n      var newTranslateX;\n      if (this._width.toFixed(1) === newWidth.toFixed(1)) {\n        return;\n      }\n      this._autoplay('stop');\n      this._elItems.classList.add(ItcSimpleSlider.TRANSITION_NONE);\n      this._width = parseInt(newWidth.toFixed(1), 10);\n      newTranslateX = newWidth * parseInt(this._elItems.dataset.translate, 10);\n      this._elItems.style.transform = 'translateX(' + newTranslateX + 'px)';\n      var $items = this._elsItem;\n      for (var i = 0; i < $items.length; i++) {\n        var translateX = parseInt($items[i].dataset.translate);\n        newTranslateX = translateX * newWidth;\n        $items[i].style.transform = 'translateX(' + newTranslateX + 'px)';\n      }\n      if (this._config.loop) {\n        this._autoplay();\n      }\n    }\n    if (this._supportResizeObserver) {\n      var resizeObserver = new ResizeObserver(onResizeObserver.bind(this));\n      resizeObserver.observe(this._elWrapper);\n      return;\n    }\n  }\n\n  // перейти к следующему слайду\n  next() {\n    this._direction = 'next';\n    this._move();\n  }\n\n  // перейти к предыдущему слайду\n  prev() {\n    this._direction = 'prev';\n    this._move();\n  }\n\n  // управление автоматической сменой слайдов\n  autoplay(action) {\n    this._autoplay('stop');\n  }\n\n  moveTo(index, useTransition) {\n    this._moveTo(index, useTransition);\n  }\n}\n"]}